"use strict";(self.webpackChunksnoopforms_docs=self.webpackChunksnoopforms_docs||[]).push([[691],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=r,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return t?o.createElement(f,i(i({ref:n},u),{},{components:t})):o.createElement(f,i({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4503:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var o=t(3117),r=t(102),a=(t(7294),t(3905)),i=["components"],l={title:"Introduction",description:"How snoopReact works",hide_table_of_contents:!0},s="Introduction",c={unversionedId:"libraries/react/introduction",id:"libraries/react/introduction",title:"Introduction",description:"How snoopReact works",source:"@site/docs/libraries/react/2_introduction.md",sourceDirName:"libraries/react",slug:"/libraries/react/introduction",permalink:"/libraries/react/introduction",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/libraries/react/2_introduction.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Introduction",description:"How snoopReact works",hide_table_of_contents:!0},sidebar:"snoopFormsSidebar",previous:{title:"Getting started",permalink:"/libraries/react/installation"},next:{title:"Inputs",permalink:"/libraries/react/inputs"}},u={},p=[{value:"All essential functionality built-in",id:"all-essential-functionality-built-in",level:2},{value:"Example",id:"example",level:2}],m={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"snoopReact\u2019s inputs work like HTML inputs - with lots of useful form features backed in. Much like how HTML\u2019s ",(0,a.kt)("inlineCode",{parentName:"p"},"<input>")," tag works with types (i.e., ",(0,a.kt)("inlineCode",{parentName:"p"},'type="text"')," or ",(0,a.kt)("inlineCode",{parentName:"p"},'type="checkbox"'),"), the ",(0,a.kt)("inlineCode",{parentName:"p"},"<snoopForm>")," tag does the same. Instead of having to deal with ",(0,a.kt)("inlineCode",{parentName:"p"},"<textarea>")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"<select>"),", all types of input you expect from a form tool are covered with the ",(0,a.kt)("inlineCode",{parentName:"p"},"<snoopForm>")," tag. This approach makes building and maintaining forms easy, fast and reliable."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This approach to form building is inspired by ",(0,a.kt)("strong",{parentName:"p"},"FromKit's innovative framework")," for building forms. ",(0,a.kt)("a",{parentName:"p",href:"https://dev.to/justinschroeder/introducing-formkit-a-vue-3-form-building-framework-53ji"},"Read an introduction to it here,")," it's definitely worth your time \ud83e\udd13")),(0,a.kt)("h2",{id:"all-essential-functionality-built-in"},"All essential functionality built-in"),(0,a.kt)("p",null,"Much like Tailwind makes CSS available in your HTML code, snoopForm allows you to handle all essential form functionality by writing HTML as well."),(0,a.kt)("p",null,"Within the ",(0,a.kt)("inlineCode",{parentName:"p"},"<snoopForm>")," tag you can manage all essential form functionality. Add labels, help texts, handle errors, add styling, add pages - everything just one line of code away."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from "react";\nimport { SnoopForm, SnoopElement, SnoopPage } from "@snoopforms/react";\n\nexport default function Example({}) {\n  return (\n    <SnoopForm\n      domain="localhost:3000"\n      protocol="http"\n      className="w-full space-y-6"\n      onSubmit={({ submission, schema }) => {\n        // do something with the data additional to sending to snoopForms\n      }}\n    >\n      <SnoopPage name="first">\n        <SnoopElement\n          type="text"\n          name={"name"}\n          label="Your name"\n          classNames={{\n            label: "your-label-class",\n            element: "your-input-class",\n          }}\n          required\n        />\n      </SnoopPage>\n      <SnoopPage name="second">\n        <SnoopElement\n          type="radio"\n          name={"importance"}\n          label="What\'s your favorite food?"\n          classNames={{\n            label: "your-label-class",\n            radioGroup: "your-radio-group-class",\n            radioOption: "your-radio-option-class",\n          }}\n          options={["Pizza", "Pasta", "Sushi"]}\n        />\n        <SnoopElement\n          type="submit"\n          label="Submit"\n          classNames={{\n            button: "your-submit-button-class",\n          }}\n        />\n      </SnoopPage>\n      <SnoopPage thankyou>\n        <h1>Thank you!</h1>\n      </SnoopPage>\n    </SnoopForm>\n  );\n}\n')),(0,a.kt)("p",null,"More on how to build forms on the next page."))}d.isMDXComponent=!0}}]);